
ATMEGA 32 DRIVERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000002e0  00000374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800066  00800066  0000037a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000037a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012fd  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008dd  00000000  00000000  0000183d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a1b  00000000  00000000  0000211a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00002b38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b7  00000000  00000000  00002e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000082d  00000000  00000000  000035cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00003dfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_10>
  2c:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ee       	ldi	r30, 0xE0	; 224
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 36       	cpi	r26, 0x6E	; 110
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 57 00 	call	0xae	; 0xae <main>
  8a:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <PWM_COMP_CALLBACK>:
*/

void PWM_OVF_CALLBACK(){
	TOGGLE_PIN(PORTB,PIN1);
		_delay_ms(100);
		PORTA=NUM_COM;
  92:	88 b3       	in	r24, 0x18	; 24
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	0e 94 7f 00 	call	0xfe	; 0xfe <TOGGLE_PIN>
  9a:	87 ea       	ldi	r24, 0xA7	; 167
  9c:	91 e6       	ldi	r25, 0x61	; 97
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <PWM_COMP_CALLBACK+0xc>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <PWM_COMP_CALLBACK+0x12>
  a4:	00 00       	nop
  a6:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <NUM_OVF>
  aa:	8b bb       	out	0x1b, r24	; 27
  ac:	08 95       	ret

000000ae <main>:
	_delay_ms(100);
	PORTA=NUM_OVF;
}

int main()
{
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	00 d0       	rcall	.+0      	; 0xb4 <main+0x6>
  b4:	00 d0       	rcall	.+0      	; 0xb6 <main+0x8>
  b6:	00 d0       	rcall	.+0      	; 0xb8 <main+0xa>
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
	DDRA =0xFF;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xFF;
  c0:	87 bb       	out	0x17, r24	; 23
	DDRC=0xFF;
  c2:	84 bb       	out	0x14, r24	; 20
	DDRD=0xFF;
  c4:	81 bb       	out	0x11, r24	; 17
	sei();
  c6:	78 94       	sei
	volatile uint8_t value;
	PWM_GET_CMP_VALUE(&value);
  c8:	ce 01       	movw	r24, r28
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	0e 94 0e 01 	call	0x21c	; 0x21c <PWM_GET_CMP_VALUE>
	PORTD=value;
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	82 bb       	out	0x12, r24	; 18

	//MCAL_PORT_DIR(DIO_PORTA, DIO_PORT_OUT);
	PWM_SETCALLBACK_CMP_INTERRUPT(PWM_COMP_CALLBACK);
  d4:	89 e4       	ldi	r24, 0x49	; 73
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 16 01 	call	0x22c	; 0x22c <PWM_SETCALLBACK_CMP_INTERRUPT>
	PWM_CONFIG_T CONFIG={PH_CORRECT_PWM,PWM_OCIE_ENABLE,PWM_TOIE_DISABLE,PWM_PRESC_CLCK8,PWM_NON_INVERTING};
  dc:	85 e0       	ldi	r24, 0x05	; 5
  de:	e0 e6       	ldi	r30, 0x60	; 96
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	de 01       	movw	r26, r28
  e4:	12 96       	adiw	r26, 0x02	; 2
  e6:	01 90       	ld	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	8a 95       	dec	r24
  ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0x38>
	PWM_SET_CMP_VALUE(0xF7);
  ee:	87 ef       	ldi	r24, 0xF7	; 247
  f0:	0e 94 13 01 	call	0x226	; 0x226 <PWM_SET_CMP_VALUE>
	PWM_INIT(&CONFIG);
  f4:	ce 01       	movw	r24, r28
  f6:	02 96       	adiw	r24, 0x02	; 2
  f8:	0e 94 b3 00 	call	0x166	; 0x166 <PWM_INIT>
  fc:	ff cf       	rjmp	.-2      	; 0xfc <main+0x4e>

000000fe <TOGGLE_PIN>:



void TOGGLE_PIN(uint8_t PORT , uint8_t PIN)
{
	switch(PORT)
  fe:	81 30       	cpi	r24, 0x01	; 1
 100:	89 f0       	breq	.+34     	; 0x124 <TOGGLE_PIN+0x26>
 102:	28 f0       	brcs	.+10     	; 0x10e <TOGGLE_PIN+0x10>
 104:	82 30       	cpi	r24, 0x02	; 2
 106:	c9 f0       	breq	.+50     	; 0x13a <TOGGLE_PIN+0x3c>
 108:	83 30       	cpi	r24, 0x03	; 3
 10a:	11 f1       	breq	.+68     	; 0x150 <TOGGLE_PIN+0x52>
 10c:	08 95       	ret
	{
		case DIO_PORTA : TOGGLEBIT(PORTA , PIN);	break;
 10e:	2b b3       	in	r18, 0x1b	; 27
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <TOGGLE_PIN+0x1c>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <TOGGLE_PIN+0x18>
 11e:	82 27       	eor	r24, r18
 120:	8b bb       	out	0x1b, r24	; 27
 122:	08 95       	ret
		case DIO_PORTB : TOGGLEBIT(PORTB , PIN);	break;
 124:	28 b3       	in	r18, 0x18	; 24
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <TOGGLE_PIN+0x32>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <TOGGLE_PIN+0x2e>
 134:	82 27       	eor	r24, r18
 136:	88 bb       	out	0x18, r24	; 24
 138:	08 95       	ret
		case DIO_PORTC : TOGGLEBIT(PORTC , PIN);	break;
 13a:	25 b3       	in	r18, 0x15	; 21
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <TOGGLE_PIN+0x48>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <TOGGLE_PIN+0x44>
 14a:	82 27       	eor	r24, r18
 14c:	85 bb       	out	0x15, r24	; 21
 14e:	08 95       	ret
		case DIO_PORTD : TOGGLEBIT(PORTD , PIN);	break;
 150:	22 b3       	in	r18, 0x12	; 18
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <TOGGLE_PIN+0x5e>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <TOGGLE_PIN+0x5a>
 160:	82 27       	eor	r24, r18
 162:	82 bb       	out	0x12, r24	; 18
 164:	08 95       	ret

00000166 <PWM_INIT>:
	
	
	
}

void PWM_SETCALLBACK_OVF_INTERRUPT(PTR_VoidFunVoid_t CALLBACK){
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	09 f4       	brne	.+2      	; 0x16c <PWM_INIT+0x6>
 16a:	54 c0       	rjmp	.+168    	; 0x214 <PWM_INIT+0xae>
 16c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <PWM_CONFIG+0x1>
 170:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <PWM_CONFIG>
 174:	fc 01       	movw	r30, r24
 176:	80 81       	ld	r24, Z
 178:	80 34       	cpi	r24, 0x40	; 64
 17a:	11 f0       	breq	.+4      	; 0x180 <PWM_INIT+0x1a>
 17c:	88 30       	cpi	r24, 0x08	; 8
 17e:	79 f4       	brne	.+30     	; 0x19e <PWM_INIT+0x38>
 180:	80 34       	cpi	r24, 0x40	; 64
 182:	39 f4       	brne	.+14     	; 0x192 <PWM_INIT+0x2c>
 184:	83 b7       	in	r24, 0x33	; 51
 186:	80 64       	ori	r24, 0x40	; 64
 188:	83 bf       	out	0x33, r24	; 51
 18a:	83 b7       	in	r24, 0x33	; 51
 18c:	88 60       	ori	r24, 0x08	; 8
 18e:	83 bf       	out	0x33, r24	; 51
 190:	06 c0       	rjmp	.+12     	; 0x19e <PWM_INIT+0x38>
 192:	83 b7       	in	r24, 0x33	; 51
 194:	80 64       	ori	r24, 0x40	; 64
 196:	83 bf       	out	0x33, r24	; 51
 198:	83 b7       	in	r24, 0x33	; 51
 19a:	87 7f       	andi	r24, 0xF7	; 247
 19c:	83 bf       	out	0x33, r24	; 51
 19e:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <PWM_CONFIG>
 1a2:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <PWM_CONFIG+0x1>
 1a6:	83 81       	ldd	r24, Z+3	; 0x03
 1a8:	88 30       	cpi	r24, 0x08	; 8
 1aa:	18 f4       	brcc	.+6      	; 0x1b2 <PWM_INIT+0x4c>
 1ac:	93 b7       	in	r25, 0x33	; 51
 1ae:	89 2b       	or	r24, r25
 1b0:	83 bf       	out	0x33, r24	; 51
 1b2:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <PWM_CONFIG>
 1b6:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <PWM_CONFIG+0x1>
 1ba:	81 81       	ldd	r24, Z+1	; 0x01
 1bc:	88 23       	and	r24, r24
 1be:	11 f0       	breq	.+4      	; 0x1c4 <PWM_INIT+0x5e>
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	19 f4       	brne	.+6      	; 0x1ca <PWM_INIT+0x64>
 1c4:	99 b7       	in	r25, 0x39	; 57
 1c6:	89 2b       	or	r24, r25
 1c8:	89 bf       	out	0x39, r24	; 57
 1ca:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <PWM_CONFIG>
 1ce:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <PWM_CONFIG+0x1>
 1d2:	82 81       	ldd	r24, Z+2	; 0x02
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	18 f4       	brcc	.+6      	; 0x1de <PWM_INIT+0x78>
 1d8:	99 b7       	in	r25, 0x39	; 57
 1da:	89 2b       	or	r24, r25
 1dc:	89 bf       	out	0x39, r24	; 57
 1de:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <PWM_CONFIG>
 1e2:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <PWM_CONFIG+0x1>
 1e6:	84 81       	ldd	r24, Z+4	; 0x04
 1e8:	80 33       	cpi	r24, 0x30	; 48
 1ea:	11 f0       	breq	.+4      	; 0x1f0 <PWM_INIT+0x8a>
 1ec:	80 32       	cpi	r24, 0x20	; 32
 1ee:	a1 f4       	brne	.+40     	; 0x218 <PWM_INIT+0xb2>
 1f0:	80 33       	cpi	r24, 0x30	; 48
 1f2:	41 f4       	brne	.+16     	; 0x204 <PWM_INIT+0x9e>
 1f4:	83 b7       	in	r24, 0x33	; 51
 1f6:	80 62       	ori	r24, 0x20	; 32
 1f8:	83 bf       	out	0x33, r24	; 51
 1fa:	83 b7       	in	r24, 0x33	; 51
 1fc:	80 61       	ori	r24, 0x10	; 16
 1fe:	83 bf       	out	0x33, r24	; 51
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	08 95       	ret
 204:	83 b7       	in	r24, 0x33	; 51
 206:	80 62       	ori	r24, 0x20	; 32
 208:	83 bf       	out	0x33, r24	; 51
 20a:	83 b7       	in	r24, 0x33	; 51
 20c:	8f 7e       	andi	r24, 0xEF	; 239
 20e:	83 bf       	out	0x33, r24	; 51
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	08 95       	ret
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	08 95       	ret
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	08 95       	ret

0000021c <PWM_GET_CMP_VALUE>:
 21c:	2c b7       	in	r18, 0x3c	; 60
 21e:	fc 01       	movw	r30, r24
 220:	20 83       	st	Z, r18
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	08 95       	ret

00000226 <PWM_SET_CMP_VALUE>:
 226:	8c bf       	out	0x3c, r24	; 60
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	08 95       	ret

0000022c <PWM_SETCALLBACK_CMP_INTERRUPT>:

	
}
void PWM_SETCALLBACK_CMP_INTERRUPT(PTR_VoidFunVoid_t CALLBACK){
	
			CALLBACK_CMP=CALLBACK;
 22c:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
 230:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
 234:	08 95       	ret

00000236 <__vector_10>:
	
	
	
}

ISR(TIMER0_COMP_vect){
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	11 24       	eor	r1, r1
 240:	2f 93       	push	r18
 242:	3f 93       	push	r19
 244:	4f 93       	push	r20
 246:	5f 93       	push	r21
 248:	6f 93       	push	r22
 24a:	7f 93       	push	r23
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
 250:	af 93       	push	r26
 252:	bf 93       	push	r27
 254:	ef 93       	push	r30
 256:	ff 93       	push	r31
	CALLBACK_CMP();
 258:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <__data_end>
 25c:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <__data_end+0x1>
 260:	09 95       	icall
}
 262:	ff 91       	pop	r31
 264:	ef 91       	pop	r30
 266:	bf 91       	pop	r27
 268:	af 91       	pop	r26
 26a:	9f 91       	pop	r25
 26c:	8f 91       	pop	r24
 26e:	7f 91       	pop	r23
 270:	6f 91       	pop	r22
 272:	5f 91       	pop	r21
 274:	4f 91       	pop	r20
 276:	3f 91       	pop	r19
 278:	2f 91       	pop	r18
 27a:	0f 90       	pop	r0
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	0f 90       	pop	r0
 280:	1f 90       	pop	r1
 282:	18 95       	reti

00000284 <__vector_11>:
ISR(TIMER0_OVF_vect){
 284:	1f 92       	push	r1
 286:	0f 92       	push	r0
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	0f 92       	push	r0
 28c:	11 24       	eor	r1, r1
 28e:	2f 93       	push	r18
 290:	3f 93       	push	r19
 292:	4f 93       	push	r20
 294:	5f 93       	push	r21
 296:	6f 93       	push	r22
 298:	7f 93       	push	r23
 29a:	8f 93       	push	r24
 29c:	9f 93       	push	r25
 29e:	af 93       	push	r26
 2a0:	bf 93       	push	r27
 2a2:	ef 93       	push	r30
 2a4:	ff 93       	push	r31
	 NUM_OVF++;
 2a6:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <NUM_OVF>
 2aa:	8f 5f       	subi	r24, 0xFF	; 255
 2ac:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <NUM_OVF>
	 CALLBACK_OVF();
 2b0:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <CALLBACK_OVF>
 2b4:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <CALLBACK_OVF+0x1>
 2b8:	09 95       	icall
}
 2ba:	ff 91       	pop	r31
 2bc:	ef 91       	pop	r30
 2be:	bf 91       	pop	r27
 2c0:	af 91       	pop	r26
 2c2:	9f 91       	pop	r25
 2c4:	8f 91       	pop	r24
 2c6:	7f 91       	pop	r23
 2c8:	6f 91       	pop	r22
 2ca:	5f 91       	pop	r21
 2cc:	4f 91       	pop	r20
 2ce:	3f 91       	pop	r19
 2d0:	2f 91       	pop	r18
 2d2:	0f 90       	pop	r0
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	0f 90       	pop	r0
 2d8:	1f 90       	pop	r1
 2da:	18 95       	reti

000002dc <_exit>:
 2dc:	f8 94       	cli

000002de <__stop_program>:
 2de:	ff cf       	rjmp	.-2      	; 0x2de <__stop_program>
