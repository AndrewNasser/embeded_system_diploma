
ATMEGA32 PROJECT 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000204  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000773  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000570  00000000  00000000  000009d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f5  00000000  00000000  00000f43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001238  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000332  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000240  00000000  00000000  0000158e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000017ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 bd 00 	jmp	0x17a	; 0x17a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "Utlis.h"
#define	F_CPU	8000000UL

int main(void)
{
	DDRA=0b11111111;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	ClearBit(DDRD,0);
  70:	81 b3       	in	r24, 0x11	; 17
  72:	8e 7f       	andi	r24, 0xFE	; 254
  74:	81 bb       	out	0x11, r24	; 17
	SetBit(PORTD,0);
  76:	82 b3       	in	r24, 0x12	; 18
  78:	81 60       	ori	r24, 0x01	; 1
  7a:	82 bb       	out	0x12, r24	; 18
	while (1)
	{
		if (ReadBit(PIND,0)==0)
  7c:	80 9b       	sbis	0x10, 0	; 16
  7e:	61 c0       	rjmp	.+194    	; 0x142 <main+0xd6>
  80:	63 c0       	rjmp	.+198    	; 0x148 <main+0xdc>
		{
			while (ReadBit(PIND,0)==0)
			{
				SetBit(PORTA,0);
  82:	8b b3       	in	r24, 0x1b	; 27
  84:	81 60       	ori	r24, 0x01	; 1
  86:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	2f e7       	ldi	r18, 0x7F	; 127
  8a:	8a e1       	ldi	r24, 0x1A	; 26
  8c:	96 e0       	ldi	r25, 0x06	; 6
  8e:	21 50       	subi	r18, 0x01	; 1
  90:	80 40       	sbci	r24, 0x00	; 0
  92:	90 40       	sbci	r25, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <main+0x22>
  96:	00 c0       	rjmp	.+0      	; 0x98 <main+0x2c>
  98:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,1);
  9a:	8b b3       	in	r24, 0x1b	; 27
  9c:	82 60       	ori	r24, 0x02	; 2
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	2f e7       	ldi	r18, 0x7F	; 127
  a2:	8a e1       	ldi	r24, 0x1A	; 26
  a4:	96 e0       	ldi	r25, 0x06	; 6
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	80 40       	sbci	r24, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <main+0x3a>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <main+0x44>
  b0:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,2);
  b2:	8b b3       	in	r24, 0x1b	; 27
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	8b bb       	out	0x1b, r24	; 27
  b8:	2f e7       	ldi	r18, 0x7F	; 127
  ba:	8a e1       	ldi	r24, 0x1A	; 26
  bc:	96 e0       	ldi	r25, 0x06	; 6
  be:	21 50       	subi	r18, 0x01	; 1
  c0:	80 40       	sbci	r24, 0x00	; 0
  c2:	90 40       	sbci	r25, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x52>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x5c>
  c8:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,3);
  ca:	8b b3       	in	r24, 0x1b	; 27
  cc:	88 60       	ori	r24, 0x08	; 8
  ce:	8b bb       	out	0x1b, r24	; 27
  d0:	2f e7       	ldi	r18, 0x7F	; 127
  d2:	8a e1       	ldi	r24, 0x1A	; 26
  d4:	96 e0       	ldi	r25, 0x06	; 6
  d6:	21 50       	subi	r18, 0x01	; 1
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	90 40       	sbci	r25, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x6a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x74>
  e0:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,4);
  e2:	8b b3       	in	r24, 0x1b	; 27
  e4:	80 61       	ori	r24, 0x10	; 16
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	2f e7       	ldi	r18, 0x7F	; 127
  ea:	8a e1       	ldi	r24, 0x1A	; 26
  ec:	96 e0       	ldi	r25, 0x06	; 6
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x82>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x8c>
  f8:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,5);
  fa:	8b b3       	in	r24, 0x1b	; 27
  fc:	80 62       	ori	r24, 0x20	; 32
  fe:	8b bb       	out	0x1b, r24	; 27
 100:	2f e7       	ldi	r18, 0x7F	; 127
 102:	8a e1       	ldi	r24, 0x1A	; 26
 104:	96 e0       	ldi	r25, 0x06	; 6
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x9a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0xa4>
 110:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,6);
 112:	8b b3       	in	r24, 0x1b	; 27
 114:	80 64       	ori	r24, 0x40	; 64
 116:	8b bb       	out	0x1b, r24	; 27
 118:	2f e7       	ldi	r18, 0x7F	; 127
 11a:	8a e1       	ldi	r24, 0x1A	; 26
 11c:	96 e0       	ldi	r25, 0x06	; 6
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0xb2>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0xbc>
 128:	00 00       	nop
				_delay_ms(2000);
				SetBit(PORTA,7);
 12a:	8b b3       	in	r24, 0x1b	; 27
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8b bb       	out	0x1b, r24	; 27
 130:	2f e7       	ldi	r18, 0x7F	; 127
 132:	8a e1       	ldi	r24, 0x1A	; 26
 134:	96 e0       	ldi	r25, 0x06	; 6
 136:	21 50       	subi	r18, 0x01	; 1
 138:	80 40       	sbci	r24, 0x00	; 0
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <main+0xca>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0xd4>
 140:	00 00       	nop
	SetBit(PORTD,0);
	while (1)
	{
		if (ReadBit(PIND,0)==0)
		{
			while (ReadBit(PIND,0)==0)
 142:	80 9b       	sbis	0x10, 0	; 16
 144:	9e cf       	rjmp	.-196    	; 0x82 <main+0x16>
 146:	9a cf       	rjmp	.-204    	; 0x7c <main+0x10>
				SetBit(PORTA,7);
				_delay_ms(2000);
			}
		}
		else{
				ClearBit(PORTA,0);
 148:	8b b3       	in	r24, 0x1b	; 27
 14a:	8e 7f       	andi	r24, 0xFE	; 254
 14c:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,1);
 14e:	8b b3       	in	r24, 0x1b	; 27
 150:	8d 7f       	andi	r24, 0xFD	; 253
 152:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,2);
 154:	8b b3       	in	r24, 0x1b	; 27
 156:	8b 7f       	andi	r24, 0xFB	; 251
 158:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,3);
 15a:	8b b3       	in	r24, 0x1b	; 27
 15c:	87 7f       	andi	r24, 0xF7	; 247
 15e:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,4);
 160:	8b b3       	in	r24, 0x1b	; 27
 162:	8f 7e       	andi	r24, 0xEF	; 239
 164:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,5);
 166:	8b b3       	in	r24, 0x1b	; 27
 168:	8f 7d       	andi	r24, 0xDF	; 223
 16a:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,6);
 16c:	8b b3       	in	r24, 0x1b	; 27
 16e:	8f 7b       	andi	r24, 0xBF	; 191
 170:	8b bb       	out	0x1b, r24	; 27
				ClearBit(PORTA,7);
 172:	8b b3       	in	r24, 0x1b	; 27
 174:	8f 77       	andi	r24, 0x7F	; 127
 176:	8b bb       	out	0x1b, r24	; 27
 178:	81 cf       	rjmp	.-254    	; 0x7c <main+0x10>

0000017a <_exit>:
 17a:	f8 94       	cli

0000017c <__stop_program>:
 17c:	ff cf       	rjmp	.-2      	; 0x17c <__stop_program>
